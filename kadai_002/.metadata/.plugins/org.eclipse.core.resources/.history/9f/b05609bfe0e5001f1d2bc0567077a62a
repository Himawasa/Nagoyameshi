package com.example.nagoyameshi.service;

import java.util.List;
import java.util.Optional;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.example.nagoyameshi.entity.Shop;
import com.example.nagoyameshi.form.ShopEditForm;
import com.example.nagoyameshi.form.ShopRegisterForm;
import com.example.nagoyameshi.repository.ShopRepository;

/**
 * 店舗に関する処理を行うサービスクラス。
 */
@Service
public class ShopService {
    private final ShopRepository shopRepository;

    /**
     * コンストラクタ
     * 
     * @param shopRepository 店舗リポジトリのインスタンス
     */
    public ShopService(ShopRepository shopRepository) {
        this.shopRepository = shopRepository;
    }

    /**
     * 店舗を全件取得するメソッド。
     * 
     * @return 店舗のリスト
     */
    public List<Shop> findAll() {
        return shopRepository.findAll();
    }

    /**
     * IDで店舗を検索するメソッド。
     * 
     * @param id 店舗ID
     * @return 該当する店舗のOptional
     */
    public Optional<Shop> findById(Integer id) {
        return shopRepository.findById(id);
    }

    /**
     * 店舗を削除するメソッド。
     * 
     * @param id 店舗ID
     */
    @Transactional
    public void deleteById(Integer id) {
        shopRepository.deleteById(id);
    }

    /**
     * 店舗を登録するメソッド。
     * 
     * @param shopRegisterForm 店舗登録フォームのデータ
     */
    @Transactional
    public void create(ShopRegisterForm shopRegisterForm) {
        Shop shop = new Shop();
        shop.setName(shopRegisterForm.getName());
        shop.setDescription(shopRegisterForm.getDescription());
        shop.setPrice(shopRegisterForm.getPrice());
        shop.setPostalCode(shopRegisterForm.getPostalCode());
        shop.setAddress(shopRegisterForm.getAddress());
        shop.setPhoneNumber(shopRegisterForm.getPhoneNumber());
        shopRepository.save(shop);
    }

    /**
     * 店舗情報を更新するメソッド。
     * 
     * @param shopEditForm 店舗編集フォームのデータ
     */
    @Transactional
    public void update(ShopEditForm shopEditForm) {
        Shop shop = shopRepository.findById(shopEditForm.getId())
                .orElseThrow(() -> new IllegalArgumentException("店舗が見つかりません。ID: " + shopEditForm.getId()));
        shop.setName(shopEditForm.getName());
        shop.setDescription(shopEditForm.getDescription());
        shop.setPrice(shopEditForm.getPrice());
        shop.setPostalCode(shopEditForm.getPostalCode());
        shop.setAddress(shopEditForm.getAddress());
        shop.setPhoneNumber(shopEditForm.getPhoneNumber());
        shopRepository.save(shop);
    }
}
