package com.example.nagoyameshi.controller;

import jakarta.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.http.HttpStatus;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.server.ResponseStatusException;

import com.example.nagoyameshi.entity.Shop;
import com.example.nagoyameshi.form.ShopEditForm;
import com.example.nagoyameshi.form.ShopRegisterForm;
import com.example.nagoyameshi.repository.CategoryRepository;
import com.example.nagoyameshi.service.ShopService;

/**
 * 管理者向けの店舗コントローラクラス。
 * 新規登録、編集、削除などの機能を提供します。
 */
@Controller
@RequestMapping("/admin/shops")
public class AdminShopController {
    private final CategoryRepository categoryRepository;

    /**
     * コンストラクタ
     * 
     * @param categoryRepository 店舗リポジトリ
     */
    public AdminShopController(CategoryRepository categoryRepository) {
        this.categoryRepository = categoryRepository;
    }

    @Autowired
    private ShopService shopService;

    /**
     * 店舗一覧を表示するメソッド（ページネーション対応）。
     */
    @GetMapping
    public String index(@RequestParam(value = "page", defaultValue = "0") int page,
                        @RequestParam(value = "keyword", required = false) String keyword,
                        Model model) {
        Page<Shop> shopPage = shopService.findShops(PageRequest.of(page, 10), keyword);
        model.addAttribute("shopPage", shopPage);
        model.addAttribute("keyword", keyword);
        return "admin/shops/index";
    }

    /**
     * 新規店舗登録画面を表示するメソッド。
     */
    @GetMapping("/register")
    public String newShop(Model model) {
        model.addAttribute("shopRegisterForm", new ShopRegisterForm());
        model.addAttribute("categories",categoryRepository.findAll());
        return "admin/shops/register";
    }

    /**
     * 新規店舗を登録するメソッド。
     */
    @PostMapping
    public String createShop(@Valid @ModelAttribute ShopRegisterForm shopRegisterForm, BindingResult bindingResult) {
        if (bindingResult.hasErrors()) {
            return "admin/shops/register";
        }
        shopService.create(shopRegisterForm);
        return "redirect:/admin/shops";
    }
}
